<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory UI drawing variables
drawUI = false;
done = false;
wipe = false;

//Item clicked on
holdingID = "empty";
holdingSprite = "";
holdingAmount = "";

//Slots clicked on
firstSlot = "";
secondSlot = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player inventory
if(drawUI and !done){
    yCoord = 100;
    slotCount = 0;
    
    //Cycle 4 times incrementing the y index (rows)
    for(yIndex = 0; yIndex &lt; 4; yIndex+=1){
        xCoord = 100;
        
        //Cycle 10 times incrementing the x index (columns)
        for(xIndex = 0; xIndex &lt; 10; xIndex+=1){
        
            //Create an instance of the invSlot object
            objSlot = instance_create(xCoord, yCoord, obj_invSlot);
            objSlot.slotID = slotCount;
            //Get the slot data from the player's inventory list
            slot = obj_player.invent[slotCount];
            if(slot[0] != "empty"){
                objSlot.itemID = slot[0];
                objSlot.amount = slot[1];
                objSlot.sprite = asset_get_index(slot[2]);
            }
            slotCount +=1;
            xCoord += 31;
        }
        yCoord += 31;
    }
    done = true;
}
else if(!drawUI){
    instance_destroy(obj_invSlot);
    instance_destroy(self);
}

//Check if both slots have been set
if(firstSlot != "" and secondSlot != ""){
    scr_swap_item_slots(firstSlot, secondSlot)
    firstSlot = "";
    secondSlot = "";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the mouse doesn't have an item selected draw the sprite on the mouse
if(holdingID != "empty"){
    draw_sprite(holdingSprite, 0, mouse_x, mouse_y)
    draw_text(mouse_x, mouse_y, holdingAmount);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
